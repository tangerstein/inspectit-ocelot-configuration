inspectit:
  metrics:
    definitions:
      '[service/in/responsetime]':
        unit: ms
        views:
          '[service/in/count]':
            aggregation: COUNT
            tags: {origin_external : true, origin_service: true, protocol: true, application : true}
          '[service/in/responsetime/sum]':
            aggregation: SUM
            tags: {origin_external : true, origin_service: true, protocol: true, application : true}
            
      '[service/out/responsetime]':
        unit: ms
        views:
          '[service/out/count]':
            aggregation: COUNT
            tags: {target_external : true, target_service: true, protocol: true, application : true}
          '[service/out/responsetime/sum]':
            aggregation: SUM
            tags: {target_external : true, target_service: true, protocol: true, application : true}
            
  instrumentation:  
    data:
      #entry marker used in techonlogy specific implementations
      servicegraph_is_entry: {down-propagation: NONE, is-tag: false}
      
      prop_origin_service: {down-propagation: GLOBAL, is-tag: false}
      prop_target_service: {up-propagation: GLOBAL, down-propagation: JVM_LOCAL, is-tag: false}
      
      #we allow the application to be defined at the beginning and to be down propagated from there
      application: {down-propagation: GLOBAL, is-tag: true}
      
      protocal: {down-propagation: NONE}
      target_external: {down-propagation: NONE}
      target_service: {down-propagation: NONE}
      origin_external: {down-propagation: NONE}
      origin_service: {down-propagation: NONE}
      
      servicegraph_call_entry: {down-propagation: NONE, is-tag: false}
      servicegraph_call_duration: {down-propagation: NONE, is-tag: false}