inspectit:
  
  instrumentation:  
  
    data:      
      servicegraph_servlet_entry_found: {down-propagation: JVM_LOCAL, is-tag: false}
           
    rules:
      servicegraph_record_servletapi_entry:
        scopes:
          servletapi_servlet_service: true
          servletapi_filter_doFilter: true
        entry:
          
          #entry point detection
          servicegraph_is_entry:
            action: test_and_set_marker
            constant-input: { marker: servicegraph_servlet_entry_found}
          
          servicegraph_call_entry: { action: timestamp_nanos }
          
          origin_service: 
            action: set
            data-input: {value: prop_origin_service}
            before: {prop_origin_service: true}
          protocol:
            action: set
            constant-input: { value: "http"}
          
          #set the target to our service in case an up-propagation for this servlet will happen at some point in the future
          prop_target_service: 
            action: set
            data-input: {value: service}
            only-if-true: servicegraph_is_entry
          
        exit:
          target_service:
            action: set
            data-input: {value: service}
            
          # we don't save anything in target_external even if target_service is null because we don't want ip's
          # or something related there due to the potential high cardinality
          servicegraph_call_duration:
            action: elapsed_millis
            data-input: {sinceNanos: servicegraph_call_entry }
            only-if-true: servicegraph_is_entry
        metrics:
          '[service/in/responsetime]': servicegraph_call_duration
          
          